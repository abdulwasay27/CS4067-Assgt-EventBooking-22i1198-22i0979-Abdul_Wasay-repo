{{- if .Values.postgresql.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgresql.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.postgresql.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.postgresql.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.postgresql.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresql.name }}
    spec:
      containers:
        - name: {{ .Values.postgresql.name }}
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.env.postgresDatabase | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.secrets.databaseUser | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.secrets.databasePassword | quote }}
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.service.port }}
              protocol: TCP
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
      volumes:
        - name: postgres-storage
          {{- if .Values.postgresql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.postgresql.persistence.pvcName }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: init-sql
          configMap:
            name: {{ .Values.postgresql.initdb.configMapName }}
{{- end }} 