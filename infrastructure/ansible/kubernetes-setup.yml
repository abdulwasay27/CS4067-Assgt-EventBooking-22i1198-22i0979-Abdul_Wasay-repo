---
- name: Setup Single-Node Kubernetes Cluster with k3s
  hosts: kubernetes_master
  become: yes
  tasks:
    - name: Disable swap
      command: swapoff -a
      changed_when: false

    - name: Remove swapfile from /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        state: absent

    - name: Install k3s (lightweight Kubernetes)
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Wait for k3s service to be active
      systemd:
        name: k3s
        state: started
        enabled: yes

    - name: Copy kubeconfig for ansible_user
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0600"

    - name: Update kubeconfig server address to use public IP
      lineinfile:
        path: /home/{{ ansible_user }}/.kube/config
        regexp: '^\s*server: https://127.0.0.1:6443'
        line: "    server: https://{{ ansible_host }}:6443"
        backrefs: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0600"

    - name: Download Helm install script
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: '0755'

    - name: Install Helm
      shell: /tmp/get_helm.sh
      args:
        creates: /usr/local/bin/helm

    - name: Add Argo CD Helm repository
      shell: helm repo add argo https://argoproj.github.io/argo-helm
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
      become: false
      become_user: "{{ ansible_user }}"
      args:
        creates: /home/{{ ansible_user }}/.cache/helm/repository/argo-index.yaml

    - name: Update Helm repositories
      shell: helm repo update
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
      become: false
      become_user: "{{ ansible_user }}"

    - name: Create argocd namespace
      shell: kubectl create namespace argocd --kubeconfig /home/{{ ansible_user }}/.kube/config || true

    - name: Install Argo CD with Helm
      shell: |
        helm install argocd argo/argo-cd \
          --namespace argocd \
          --kubeconfig /home/{{ ansible_user }}/.kube/config
      become: false
      become_user: "{{ ansible_user }}"

    - name: Patch Argo CD server service to NodePort
      shell: |
        kubectl patch svc argocd-server -n argocd \
          -p '{"spec": {"type": "NodePort"}}' \
          --kubeconfig /home/{{ ansible_user }}/.kube/config || true
